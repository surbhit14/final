(function() {
  var Point;

  module.exports = Point = (function() {
    Point.create = function(x, y) {
      if (x instanceof Point) {
        return x;
      }
      if (((x != null ? x.x : void 0) != null) && ((x != null ? x.y : void 0) != null)) {
        return new Point(x.x, x.y);
      } else if (Array.isArray(x)) {
        return new Point(x[0], x[1]);
      } else {
        return new Point(x, y);
      }
    };

    function Point(x, y) {
      this.set(x, y);
    }

    Point.prototype.set = function(x1, y1) {
      var ref;
      this.x = x1;
      this.y = y1;
      if (Array.isArray(this.x)) {
        return ref = this.x, this.x = ref[0], this.y = ref[1], ref;
      }
    };

    Point.prototype.add = function(other) {
      other = Point.create(other);
      return new Point(this.x + other.x, this.y + other.y);
    };

    Point.prototype.subtract = function(other) {
      other = Point.create(other);
      return new Point(this.x - other.x, this.y - other.y);
    };

    Point.prototype.toArray = function() {
      return [this.x, this.y];
    };

    Point.prototype.equals = function(other) {
      other = Point.create(other);
      return other.x === this.x && other.y === this.y;
    };

    Point.prototype.toString = function() {
      return "(" + this.x + ", " + this.y + ")";
    };

    return Point;

  })();

}).call(this);
