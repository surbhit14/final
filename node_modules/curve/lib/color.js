(function() {
  var Color, Point, SVG;

  SVG = require('../vendor/svg');

  Point = require("./point");

  module.exports = Color = (function() {
    function Color() {
      this.matrix = null;
      this.transformString = '';
    }

    Color.prototype.setTransformString = function(transformString) {
      var k, transform, v;
      if (transformString == null) {
        transformString = '';
      }
      if (this.transformString === transformString) {
        return false;
      } else {
        this.transformString = transformString;
        transform = SVG.parse.transform(transformString);
        this.matrix = null;
        if (transform) {
          this.matrix = SVG.parser.draw.node.createSVGMatrix();
          if (transform.x != null) {
            this.matrix = this.matrix.translate(transform.x, transform.y);
          } else if (transform.a != null) {
            for (k in transform) {
              v = transform[k];
              this.matrix[k] = transform[k];
            }
          } else {
            this.matrix = null;
          }
        }
        return true;
      }
    };

    Color.prototype.toString = function() {
      return this.transformString;
    };

    Color.prototype.transformPoint = function(point) {
      var svgPoint;
      point = Point.create(point);
      if (this.matrix) {
        svgPoint = SVG.parser.draw.node.createSVGPoint();
        svgPoint.x = point.x;
        svgPoint.y = point.y;
        svgPoint = svgPoint.matrixTransform(this.matrix);
        return Point.create(svgPoint.x, svgPoint.y);
      } else {
        return point;
      }
    };

    return Color;

  })();

}).call(this);
