(function() {
  var Point, Size;

  Point = require('./point');

  module.exports = Size = (function() {
    Size.create = function(width, height) {
      if (width instanceof Size) {
        return width;
      }
      if (Array.isArray(width)) {
        return new Size(width[0], width[1]);
      } else {
        return new Size(width, height);
      }
    };

    function Size(width, height) {
      this.set(width, height);
    }

    Size.prototype.set = function(width1, height1) {
      var ref;
      this.width = width1;
      this.height = height1;
      if (Array.isArray(this.width)) {
        return ref = this.width, this.width = ref[0], this.height = ref[1], ref;
      }
    };

    Size.prototype.add = function(width, height) {
      var other, point;
      if (width instanceof Point || ((width.x != null) && (width.y != null))) {
        point = width;
        return new Size(this.width + point.x, this.height + point.y);
      } else {
        other = Size.create(width, height);
        return new Size(this.width + other.width, this.height + other.height);
      }
    };

    Size.prototype.toArray = function() {
      return [this.width, this.height];
    };

    Size.prototype.equals = function(other) {
      other = Size.create(other);
      return other.width === this.width && other.height === this.height;
    };

    Size.prototype.toString = function() {
      return "(" + this.width + ", " + this.height + ")";
    };

    return Size;

  })();

}).call(this);
