(function() {
  var SVG,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  SVG = require('../../vendor/svg.js');

  SVG.Circle = (function(superClass) {
    extend(Circle, superClass);

    function Circle() {
      Circle.__super__.constructor.call(this, SVG.create('circle'));
    }

    Circle.prototype.cx = function(x) {
      if (x === null) {
        return this.attr('cx');
      } else {
        return this.attr('cx', new SVG.Number(x).divide(this.trans.scaleX));
      }
    };

    Circle.prototype.cy = function(y) {
      if (y === null) {
        return this.attr('cy');
      } else {
        return this.attr('cy', new SVG.Number(y).divide(this.trans.scaleY));
      }
    };

    Circle.prototype.radius = function(rad) {
      return this.attr({
        r: new SVG.Number(rad)
      });
    };

    return Circle;

  })(SVG.Shape);

  SVG.extend(SVG.Container, {
    circle: function(radius) {
      return this.put(new SVG.Circle).radius(radius).move(0, 0);
    }
  });

}).call(this);
